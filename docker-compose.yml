services:
  oracle-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: oracle-backend
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - NEO4J_URI=bolt://oracle-neo4j:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - CHROMADB_HOST=oracle-chromadb
      - CHROMADB_PORT=8002
      - VLLM_BASE_URL=http://oracle-vllm:8001
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://localhost:11434}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      oracle-neo4j:
        condition: service_healthy
      oracle-chromadb:
        condition: service_healthy
    networks:
      - oracle-network
    volumes:
      - ./backend:/app
      - backend-cache:/root/.cache
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  oracle-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: oracle-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - BACKEND_URL=http://oracle-backend:8000
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      oracle-backend:
        condition: service_healthy
    networks:
      - oracle-network
    volumes:
      - ./frontend:/app
      - frontend-node-modules:/app/node_modules

  # oracle-vllm:
  #   image: vllm/vllm-openai:latest
  #   container_name: oracle-vllm
  #   ports:
  #     - "${VLLM_PORT:-8001}:8001"
  #   environment:
  #     - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-0}
  #     - VLLM_MODEL=${VLLM_MODEL:-microsoft/DialoGPT-medium}
  #     - VLLM_HOST=0.0.0.0
  #     - VLLM_PORT=8001
  #   command: >
  #     --model ${VLLM_MODEL:-microsoft/DialoGPT-medium}
  #     --host 0.0.0.0
  #     --port 8001
  #     --api-key ${VLLM_API_KEY:-oracle-key}
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   networks:
  #     - oracle-network
  #   volumes:
  #     - vllm-cache:/root/.cache

  oracle-neo4j:
    image: neo4j:5.15-community
    container_name: oracle-neo4j
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-password}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=${NEO4J_HEAP_SIZE:-512m}
      - NEO4J_dbms_memory_heap_max__size=${NEO4J_HEAP_SIZE:-512m}
      - NEO4J_dbms_memory_pagecache_size=${NEO4J_PAGECACHE_SIZE:-256m}
    networks:
      - oracle-network
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER:-neo4j}", "-p", "${NEO4J_PASSWORD:-password}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  oracle-chromadb:
    image: chromadb/chroma:latest
    container_name: oracle-chromadb
    ports:
      - "${CHROMADB_PORT:-8002}:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - PERSIST_DIRECTORY=/chroma/chroma
    networks:
      - oracle-network
    volumes:
      - chromadb-data:/chroma/chroma
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/v1/heartbeat')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  oracle-network:
    driver: bridge
    name: oracle-network

volumes:
  neo4j-data:
    name: oracle-neo4j-data
  neo4j-logs:
    name: oracle-neo4j-logs
  neo4j-import:
    name: oracle-neo4j-import
  neo4j-plugins:
    name: oracle-neo4j-plugins
  chromadb-data:
    name: oracle-chromadb-data
  vllm-cache:
    name: oracle-vllm-cache
  backend-cache:
    name: oracle-backend-cache
  frontend-node-modules:
    name: oracle-frontend-node-modules